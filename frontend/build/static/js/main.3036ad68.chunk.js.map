{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","varian","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","console","log","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","header","updateProduct","File","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3036ad68.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET= 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET= 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer ,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { \r\n    cartReducer\r\n} from './reducers/cartReducers'\r\nimport { \r\n    userDetailsReducer, \r\n    userLoginReducer, \r\n    userRegisterReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderDeliverReducer,\r\n    orderListMyReducer,\r\n    orderListReducer\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n    ? JSON.parse(localStorage.getItem('cartItems')) \r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') \r\n    ? JSON.parse(localStorage.getItem('userInfo')) \r\n    : null\r\n\r\n// Obtiene los valores guardaros en el localStorage\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : []\r\n\r\n// Establece los valores iniciales de los diferentes estados.\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage,\r\n            shippingAddress: shippingAddressFromStorage \r\n          },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL, \r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL, \r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products, \r\n                pages: action.payload.pages, \r\n                page: action.payload.page \r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: { reviews: [] } }, \r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state={ product: {} }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state={ }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state={ products: [] }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_PAYMENT_METHOD, \r\n    CART_SAVE_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} }, \r\n    action\r\n) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => \r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return  {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state, //Devuelve el estado inicial\r\n                shippingAddress: action.payload //shippingAddress toma el valor que devuelve la acción: saveShippingAddress, que toma los datos que pasamos desde el formulario.\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL, \r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state={ }, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state={ }, action) => {\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state={ user: {} }, action) => {\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch(action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}","import  { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL, \r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} }, \r\n    action\r\n) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders:[] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders:[] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL, \r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_REQUEST,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_REQUEST\r\n} from \"../constants/userConstants\"\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {   \r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login', \r\n            { email, password }, \r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users', \r\n            { name, email, password }, \r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/`,\r\n            user,\r\n            config,\r\n        )\r\n        console.log(data)\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LIST_REQUEST })\r\n\r\n        //Para obtener el Token\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        //Para obtener el Token\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n        //Para obtener el Token\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n                type='text' \r\n                name='q' \r\n                onChange={(e) => setKeyword(e.target.value)} \r\n                placeholder='Search Products...' \r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from '../components/SearchBox'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link>\r\n                                    <i className='fas fa-shopping-cart mr-1'></i>Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                                ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link>\r\n                                        <i className='fas fa-user mr-1'></i>Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>                         \r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                 <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n                </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Coypyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n           <span>\r\n                <i \r\n                    style={{color}}\r\n                    className={ \r\n                    value >= 1  \r\n                    ? 'fas fa-star' \r\n                    : value >= 0.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-start'\r\n                    }\r\n                ></i> \r\n            </span> \r\n           <span>\r\n                <i \r\n                    style={{color}}\r\n                    className={ \r\n                    value >= 2  \r\n                    ? 'fas fa-star' \r\n                    : value >= 1.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-start'\r\n                    }\r\n                ></i> \r\n            </span> \r\n           <span>\r\n                <i \r\n                    style={{color}}\r\n                    className={ \r\n                    value >= 3  \r\n                    ? 'fas fa-star' \r\n                    : value >= 2.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-start'\r\n                    }\r\n                ></i> \r\n            </span> \r\n           <span>\r\n                <i \r\n                    style={{color}}\r\n                    className={ \r\n                    value >= 4  \r\n                    ? 'fas fa-star' \r\n                    : value >= 3.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-start'\r\n                    }\r\n                ></i> \r\n            </span> \r\n           <span>\r\n                <i \r\n                    style={{color}}\r\n                    className={  \r\n                    value >= 5  \r\n                    ? 'fas fa-star' \r\n                    : value >= 4.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-start'\r\n                    }\r\n                ></i> \r\n            </span> \r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n    text: ''\r\n}\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n               <Card.Img src={product.image} variant='top' /> \r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating \r\n                        value={product.rating} \r\n                        text={`${product.numReviews} reviews`} \r\n                    />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n            animation='border' \r\n            role='status' \r\n            style={{ \r\n                width: '100px', \r\n                height: '100px', \r\n                margin: 'auto', \r\n                display:'block' \r\n            }}\r\n        >\r\n            <span className='sr-only'></span>\r\n            \r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x + 1} \r\n                    to={ \r\n                        !isAdmin \r\n                            ? keyword \r\n                                ? `/search/${keyword}/page/${x+1}` \r\n                                : `/page/${x+1}` \r\n                            : `/admin/productlist/${x+1}` }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n        //Para obtener el Token\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n\r\n        //Para obtener el Token\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n\r\n        //Para obtener el Token\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}`, \r\n            product, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// review es un objeto que contiene: rating y comment\r\nexport const createProductReview = (productId, review) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n \r\n        //Para obtener el Token\r\n        const { userLogin: { userInfo } } = getState()\r\n \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n \r\n        await axios.post(\r\n            `/api/products/${productId}/reviews`, \r\n            review, \r\n            config\r\n        )\r\n \r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message \r\n                    : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} ({product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description}/>\r\n            <meta name='keyword' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\n// Valores por defecto\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Proshop',\r\n    keywords: 'electronics, buy electronics, cheap electronics',\r\n    description: 'We sell the best product for cheap'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({match}) => {\r\n    const keyword  = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n    \r\n    return (\r\n        <>\r\n        <Meta />\r\n        {!keyword ? (\r\n            <ProductCarousel /> \r\n        ): (\r\n            <Link to='/' className='btn btn-light'>\r\n                Go back\r\n            </Link>\r\n        ) }\r\n            <h1>ültimos productos</h1> \r\n            {loading ? (\r\n                <Loader />\r\n            ) :  error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate \r\n                        pages={pages} \r\n                        page={page} \r\n                        keyword={keyword ? keyword : ''}\r\n                    />\r\n                </>\r\n            ) }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Link className='btn btn-linght my-3' to='/'>\r\n                Go back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message varian='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    {product.rating && (\r\n                                        <Rating \r\n                                            value={product.rating} \r\n                                            text={`${product.numReviews} reviews`} \r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: ${product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    \r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control \r\n                                                        as='select' \r\n                                                        onChange={(e) => setQty(e.target.value)}\r\n                                                        value={qty} \r\n                                                    >\r\n                                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button \r\n                                            onClick={addToCartHandler}\r\n                                            className='btn-block' \r\n                                            type='button' \r\n                                            disabled={product.countInStock === 0}\r\n                                        >\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {/**Si no hay Reviews */}\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            {/**Si hay Reviews */}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map(review => (\r\n                                   <ListGroup.Item key={review._id}>\r\n                                       <strong>{review.name}</strong>\r\n                                       <Rating value={review.rating} />\r\n                                       <p>{review.createdAt.substring(0, 10)}</p>\r\n                                       <p>{review.comment}</p>\r\n                                   </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && (\r\n                                        <Message variant='danger'>{errorProductReview}</Message>\r\n                                    )}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                                    <option value=''>Select...</option>\r\n                                                    <option value='1'>1 - Poor</option>\r\n                                                    <option value='2'>2 - Fair</option>\r\n                                                    <option value='3'>3 - Good</option>\r\n                                                    <option value='4'>4 - Very Good</option>\r\n                                                    <option value='5'>5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button type='submit' variant='primary'>Submit</Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>\r\n                                            Please <Link to='/login'>sign in</Link> to write a review {' '}\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_PAYMENT_METHOD, \r\n    CART_SAVE_SHIPPING_ADDRESS \r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart    \r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your car is empty <Link>Go back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>  \r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={item.qty} \r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' varian='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup varian='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type='button' \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0} \r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>                           \r\n                </Card> \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter email' \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password Address</Form.Label>\r\n                <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter password' \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' varian='primary'>\r\n                Sign In\r\n            </Button>\r\n        </Form>\r\n        <Row className='py-3'>\r\n            <Col>\r\n                New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n            </Col>\r\n        </Row>\r\n\r\n    </FormContainer> \r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }        \r\n    }\r\n\r\n    return <FormContainer>\r\n        <h1>Sign Up</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                <Form.Label>Name Address</Form.Label>\r\n                <Form.Control \r\n                    type='name' \r\n                    placeholder='Enter name' \r\n                    value={name} \r\n                    onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter email' \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password Address</Form.Label>\r\n                <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter password' \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter confirm password' \r\n                    value={confirmPassword} \r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' varian='primary'>\r\n                Register\r\n            </Button>\r\n        </Form>\r\n        <Row className='py-3'>\r\n            <Col>\r\n                Have an Account ?{' '} \r\n                <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Register</Link>\r\n            </Col>\r\n        </Row>\r\n\r\n    </FormContainer> \r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }        \r\n    }\r\n\r\n    return <Row>\r\n        <Col md={3}>\r\n        <h1>User Profile</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile updated</Message>}\r\n        {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name Address</Form.Label>\r\n                    <Form.Control \r\n                        type='name' \r\n                        placeholder='Enter name' \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email' \r\n                        placeholder='Enter email' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password Address</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter confirm password' \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' varian='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th>BUTTONS</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0,10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                     )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0,10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm' variant='light'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row> \r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n        // Obtener los datos del usuario\r\n        const { userLogin: { userInfo } } = getState()\r\n        // Establecer los headers con el content-type y la autorización\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // Post Request to a la tabla orders\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n        // Obtener los datos del usuario\r\n        const { userLogin: { userInfo } } = getState()\r\n        // Establecer los headers con el content-type y la autorización\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // Post Request to a la tabla orders\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST })\r\n\r\n        // Obtener los datos del usuario\r\n        const { userLogin: { userInfo } } = getState()\r\n        // Establecer los headers con el content-type y la autorización\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // Post Request to a la tabla orders\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({ type: ORDER_LIST_MY_REQUEST })\r\n\r\n        // Obtener los datos del usuario\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        // Establecer los headers con el content-type y la autorización\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // Post Request to a la tabla orders\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_REQUEST })\r\n\r\n        // Obtención del token\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        // Establecer los headers con el content-type y la autorización\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // Obtener las órdenes.\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({ type: ORDER_DELIVER_REQUEST })\r\n\r\n        // Obtener los datos del usuario\r\n        const { userLogin: { userInfo } } = getState()\r\n        // Establecer los headers con el content-type y la autorización\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        console.log(userInfo)\r\n        // Post Request to a la tabla orders\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n      \r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ):( \r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ):( \r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ):( \r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/lplaceorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ):( \r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    // Obtiene los valores iniciales de la dirección de envío guardados en el localStorage. Mirar store.js\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment') // Para redirigir a la siguiente página\r\n    }\r\n\r\n    return <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='address'>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Address'\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            \r\n            <Form.Group controlId='city'>\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter City'\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n          \r\n            <Form.Group controlId='postalCode'>\r\n                <Form.Label>PostalCode</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter PostalCode'\r\n                    value={postalCode}\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n         \r\n            <Form.Group controlId='country'>\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Country'\r\n                    value={country}\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>Continue</Button>\r\n        </Form>\r\n    </FormContainer>\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    // Obtiene los valores iniciales de la dirección de envío guardados en el localStorage. Mirar store.js\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder') // Para redirigir a la siguiente página\r\n    }\r\n\r\n    return <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 />\r\n        <h1>Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n                <Form.Label as='legend'>Select Method</Form.Label>            \r\n                <Col>\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='Paypal or Credit Card' \r\n                        id='Paypal' name='paymentMethod' \r\n                        value='Paypal' \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='Stripe' \r\n                        id='Stripe' name='paymentMethod' \r\n                        value='Stripe' \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>Continue</Button>\r\n        </Form>\r\n    </FormContainer>\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    // Crear el Dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    // Obtenemos el valor de la variable cart\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    // Calulate Prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    // Obtener los datos guardados en orderCreate\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n    \r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        \r\n    }, [history, success, order])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <CheckoutSteps step1 step2 step3 step4 /> \r\n           <Row>\r\n               <Col md={8}>\r\n                   <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 \r\n                                ? <Message>Your cart is empty</Message> \r\n                                : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />       \r\n                                                    </Col> \r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x {item.price} = ${item.qty * item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'></Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type='button' \r\n                                    className='btn-block' \r\n                                    disabled={cart.cartItems === 0} \r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n           </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    // Obtener el ID del order del id enviado por la URL\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    // Crear el Dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    // Obtener los datos guardados en orderCreate\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    // Obtener si success en OrderPayReducer es true.\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    // Obtener si success en OrderDeliverReducer es true.\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPaypalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal') \r\n            //console.log(clientId)\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n\r\n        }       \r\n\r\n        if(!order || successPay || successDeliver) {\r\n            //console.log(\"no hay pedido o está pagado\")\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid) {\r\n            //console.log(\"no esta pagado\")\r\n            if(!window.paypal) {\r\n                //console.log('no está el script de paypal')\r\n                addPaypalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n                //console.log('el script esta puesto')\r\n            }\r\n        }\r\n\r\n    }, [dispatch, history, orderId, successPay, successDeliver, order, userInfo])\r\n\r\n    // Función cuando se le da al botón de Paypal.\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading \r\n    \r\n        ? <Loader /> \r\n        : error ? <Message variant='danger'>{error}</Message> \r\n        : <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n               <Col md={8}>\r\n                   <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong>{order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.isDelivered}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 \r\n                                ? <Message>Order is empty</Message> \r\n                                : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />       \r\n                                                    </Col> \r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x {item.price} = ${item.qty * item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton \r\n                                        amount={order.totalPrice} \r\n                                        onSuccess={successPaymentHandler} \r\n                                        />                  \r\n                                    )}                                   \r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button \r\n                                        type='button' \r\n                                        className='btn btn-block' \r\n                                        onClick={deliverHandler}\r\n                                    >\r\n                                        Mark As Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n           </Row>\r\n        </>\r\n}\r\n\r\nexport default OrderScreen\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    // Información del usuario logueado\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    \r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) { \r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n        // A cada cambio de alguna de estas variables el useEffect se ejecuta.\r\n    }, [\r\n        dispatch, \r\n        history,\r\n        userInfo\r\n    ])\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1> \r\n            {loading \r\n                ? <Loader /> \r\n                : error ? <Message variant='danger'>{error}</Message> \r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>\r\n                                    {order.isPaid\r\n                                        ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )\r\n                                    }\r\n                                    </td>\r\n                                    <td>\r\n                                    {order.isDelivered\r\n                                        ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )\r\n                                    }\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    // Información del usuario logueado\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    // Estado del userDelete (loading, success)\r\n    const userDelete= useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete \r\n    \r\n    useEffect(() => {\r\n        // Sin acceso a los no admins.\r\n        if(userInfo && userInfo.isAdmin) { \r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        // A cada cambio de alguna de estas variables el useEffect se ejecuta.\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        // Mensaje de confirmación de la elimación de un usuario.\r\n        if(window.confirm('Are you sure')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <h1>Users</h1> \r\n           {loading \r\n                ? <Loader /> \r\n                : error ? <Message variant='danger'>{error}</Message> \r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                    <td>\r\n                                    {user.isAdmin \r\n                                        ? (\r\n                                            <i className='fas fa-check' style={{color: 'green'}}></i>\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )\r\n                                    }\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button \r\n                                            variant='danger' \r\n                                            className='btn-sm' \r\n                                            onClick={() => deleteHandler(user._id)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userList')\r\n        } else {\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }      \r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/userList' className='btn btn-light my-3'>Go back</Link>\r\n        <FormContainer>\r\n            <h1>Edit user</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> \r\n                : error \r\n                ? <Message variant='danger'>{error}</Message> \r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name Address</Form.Label>\r\n                            <Form.Control \r\n                                type='name' \r\n                                placeholder='Enter name' \r\n                                value={name} \r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control \r\n                                type='email' \r\n                                placeholder='Enter email' \r\n                                value={email} \r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isAdmin'>\r\n                            <Form.Check \r\n                                type='checkbox' \r\n                                label='Is admin' \r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' varian='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )\r\n            }\r\n           \r\n\r\n        </FormContainer> \r\n    </>\r\n    \r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\n//import Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    // Información del usuario logueado\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { \r\n        loading: loadingDelete, \r\n        error: errorDelete, \r\n        success: successDelete \r\n    } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { \r\n        loading: loadingCreate, \r\n        error: errorCreate, \r\n        success: successCreate,\r\n        product: createdProduct \r\n    } = productCreate\r\n    \r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n\r\n\r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n\r\n        // A cada cambio de alguna de estas variables el useEffect se ejecuta.\r\n    }, [\r\n        dispatch, \r\n        history, \r\n        successDelete, \r\n        userInfo, \r\n        successCreate,\r\n        createdProduct,\r\n        pageNumber\r\n    ])\r\n\r\n    const deleteHandler = (id) => {\r\n        // Mensaje de confirmación de la elimación de un usuario.\r\n        if(window.confirm('Are you sure')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading \r\n                ? <Loader /> \r\n                : error ? <Message variant='danger'>{error}</Message> \r\n                : (\r\n                    <>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>BRAND</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map((product) => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>${product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button \r\n                                                variant='danger' \r\n                                                className='btn-sm' \r\n                                                onClick={() => deleteHandler(product._id)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                    </>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { \r\n        loading: loadingUpdate, \r\n        error: errorUpdate, \r\n        success: successUpdate \r\n    } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productList')\r\n        } else {\r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }            \r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                header: {\r\n                    'Content-Type': 'multipart/form-data'  \r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productList' className='btn btn-light my-3'>Go back</Link>\r\n        <FormContainer>\r\n            <h1>Edit product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading \r\n                ? <Loader /> \r\n                : error \r\n                ? <Message variant='danger'>{error}</Message> \r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name Address</Form.Label>\r\n                            <Form.Control \r\n                                type='name' \r\n                                placeholder='Enter name' \r\n                                value={name} \r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price Address</Form.Label>\r\n                            <Form.Control \r\n                                type='number' \r\n                                placeholder='Enter price' \r\n                                value={price} \r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter image URL' \r\n                                    value={image} \r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Form.Control>\r\n                                <Form.File \r\n                                    id='image-file' \r\n                                    label='Choose File' \r\n                                    custom onChange={uploadFileHandler}\r\n                                ></Form.File>\r\n                                {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter brand' \r\n                                    value={brand} \r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control \r\n                                type='number' \r\n                                placeholder='Enter Count In Stock' \r\n                                value={countInStock} \r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter category' \r\n                                    value={category} \r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter description' \r\n                                    value={description} \r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' varian='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )\r\n            }\r\n           \r\n        </FormContainer> \r\n    </>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\n\r\nconst App = () => {\r\n  return (   \r\n    <Router>  \r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route \r\n            path='/admin/productlist' \r\n            component={ProductListScreen} \r\n            exact\r\n          />\r\n          <Route \r\n            path='/admin/productlist/:pageNumber' \r\n            component={ProductListScreen} \r\n            exact\r\n          />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route \r\n            path='/search/:keyword/page/:pageNumber' \r\n            component={HomeScreen} \r\n            exact\r\n          />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />     \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}